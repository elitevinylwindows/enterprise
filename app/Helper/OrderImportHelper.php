<?php

namespace App\Helper;

class OrderImportHelper
{
    public static function getHeaderMap()
    {
        return [
'Order #' => 'order_number',
'Order type' => 'order_type',
'Customer' => 'customer',
'Short name' => 'short_name',
'Internal order #' => 'internal_order_number',
'Comment' => 'comment',
'Commission' => 'commission',
'Entered by' => 'entered_by',
'Entry date' => 'entry_date',
'Units' => 'units',
'# of fields' => 'number_of_fields',
'Production Barcode' => 'production_barcode',
'Total including tax' => 'total_with_tax',
'Currency' => 'currency',
'Total in own currency' => 'total_own_currency',
'Status' => 'status',
'Production status' => 'production_status',
'Delivery date' => 'delivery_date',
'Edit status' => 'edit_status',
'Arrival date' => 'arrival_date',
'Project #' => 'project_number',
'Classification' => 'classification',
'Reference' => 'reference',
'Name' => 'name',
'Tax' => 'tax',
'CW' => 'cw',
'Order confirmation printed' => 'confirmation_printed',
'Delivery note exists' => 'delivery_note_exists',
'Invoice exists' => 'invoice_exists',
'Window Order Printed/Exported' => 'window_order_exported',
'Invoice has been paid.' => 'invoice_paid',
'Delivery note printed' => 'delivery_note_printed',
'Invoice printed' => 'invoice_printed',
'Credit note exists' => 'credit_note_exists',
'Internal invoice exists' => 'internal_invoice_exists',
'Factory assignment undefined ' => 'factory_assignment_undefined',
'Manual lock' => 'manual_lock',
'Area' => 'area',
'Outside sales' => 'outside_sales',
'Import assignment' => 'import_assignment',
'Order complete' => 'order_complete',
'End of appeal period' => 'appeal_period_end',
'Origin' => 'origin',
'Dispatch planned' => 'dispatch_planned',
'Required date' => 'required_date',
'Required date (CW)' => 'required_date_cw',
'Entry date (original)' => 'entry_date_original',
'Inside Sales' => 'inside_sales',
'Scheduling' => 'scheduling',
'Tech. Handling' => 'technical_handling',
'Net Price' => 'net_price',
'Net price in own currency' => 'net_price_own_currency',
'Canceled' => 'canceled',
'Completed' => 'completed',
'Archived' => 'archived',
'City' => 'city',
'Credit limit block' => 'credit_limit_block',
'Completely invoiced' => 'fully_invoiced',
'Complete Receipt' => 'complete_receipt',
'Delivery condition' => 'delivery_condition',
'Tax rule' => 'tax_rule',
'Deposit invoice exists' => 'deposit_invoice_exists',
'Commercial site' => 'commercial_site',
'Object type' => 'object_type',
'Purchase order date' => 'purchase_order_date',
'Name 2' => 'name_2',
'ZIP' => 'zip',
'Payment method' => 'payment_method',
'Schedule status' => 'schedule_status',
'Print date' => 'print_date',
'Delivery Date Calc. Mode' => 'delivery_calc_mode',
'Waiting for secondary plant' => 'waiting_secondary_plant',
'Order # (Commercial site)' => 'order_number_commercial_site',
'Input type' => 'input_type',
'In-house manufacturing' => 'inhouse_manufacturing',
'External manufacturing' => 'external_manufacturing',
'Installation/Service scheduled' => 'installation_scheduled',
'Min. arrival date (delivery note)' => 'arrival_min_date',
'Max. arrival date (delivery note)' => 'arrival_max_date',
'Arrival variation' => 'arrival_variation',
'Validity date' => 'validity_date',
'Installation area' => 'installation_area',
'Prod. status (Color)' => 'production_status_color',
'External reference order' => 'external_reference_order',
'Dealer #' => 'dealer_number',
'Shipping Stages' => 'shipping_stages',
'Waiting for change order' => 'waiting_for_change_order',
'Production site' => 'production_site',

        ];
    }
}
